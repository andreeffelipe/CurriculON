{"ast":null,"code":"import{createStore,combineReducers}from'redux';const initialProductState={produtos:[]};const produtoReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialProductState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'ADD_PRODUTO':return{...state,produtos:[...state.produtos,action.payload]};case'DELETE_PRODUTO':return{...state,produtos:state.produtos.filter((_,index)=>index!==action.payload)};case'UPDATE_PRODUTO':return{...state,produtos:state.produtos.map((produto,index)=>index===action.payload.index?action.payload.updatedProduto:produto)};default:return state;}};const rootReducer=combineReducers({produto:produtoReducer});const store=createStore(rootReducer);export default store;","map":{"version":3,"names":["createStore","combineReducers","initialProductState","produtos","produtoReducer","state","arguments","length","undefined","action","type","payload","filter","_","index","map","produto","updatedProduto","rootReducer","store"],"sources":["C:/Users/mgerm/SistemaCP/src/store.js"],"sourcesContent":["import { createStore, combineReducers } from 'redux';\r\n\r\nconst initialProductState = {\r\n    produtos: []\r\n};\r\n\r\nconst produtoReducer = (state = initialProductState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PRODUTO':\r\n            return {\r\n                ...state,\r\n                produtos: [...state.produtos, action.payload]\r\n            };\r\n        case 'DELETE_PRODUTO':\r\n            return {\r\n                ...state,\r\n                produtos: state.produtos.filter((_, index) => index !== action.payload)\r\n            };\r\n        case 'UPDATE_PRODUTO':\r\n            return {\r\n                ...state,\r\n                produtos: state.produtos.map((produto, index) => \r\n                index === action.payload.index ? action.payload.updatedProduto : produto)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    produto: produtoReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;"],"mappings":"AAAA,OAASA,WAAW,CAAEC,eAAe,KAAQ,OAAO,CAEpD,KAAM,CAAAC,mBAAmB,CAAG,CACxBC,QAAQ,CAAE,EACd,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,QAAAA,CAAA,CAAyC,IAAxC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGJ,mBAAmB,IAAE,CAAAO,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACvD,OAAQC,MAAM,CAACC,IAAI,EACf,IAAK,aAAa,CACd,MAAO,CACH,GAAGL,KAAK,CACRF,QAAQ,CAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,CAAEM,MAAM,CAACE,OAAO,CAChD,CAAC,CACL,IAAK,gBAAgB,CACjB,MAAO,CACH,GAAGN,KAAK,CACRF,QAAQ,CAAEE,KAAK,CAACF,QAAQ,CAACS,MAAM,CAAC,CAACC,CAAC,CAAEC,KAAK,GAAKA,KAAK,GAAKL,MAAM,CAACE,OAAO,CAC1E,CAAC,CACL,IAAK,gBAAgB,CACjB,MAAO,CACH,GAAGN,KAAK,CACRF,QAAQ,CAAEE,KAAK,CAACF,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,CAAEF,KAAK,GAC5CA,KAAK,GAAKL,MAAM,CAACE,OAAO,CAACG,KAAK,CAAGL,MAAM,CAACE,OAAO,CAACM,cAAc,CAAGD,OAAO,CAC5E,CAAC,CACL,QACI,MAAO,CAAAX,KAAK,CACpB,CACJ,CAAC,CAED,KAAM,CAAAa,WAAW,CAAGjB,eAAe,CAAC,CAChCe,OAAO,CAAEZ,cACb,CAAC,CAAC,CAEF,KAAM,CAAAe,KAAK,CAAGnB,WAAW,CAACkB,WAAW,CAAC,CAEtC,cAAe,CAAAC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}